name: deploy

on:
  workflow_call:
    inputs:
      environment:
        description: The environment to target for the deployment
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      DIGITALOCEAN_ACCESS_TOKEN:
        required: true
      EXTERNAL_DNS_TOKEN:
        required: true
      OBSERVE_ROOT_USER_PASSWORD:
        required: true
      WEB_ANALYTICS_SECRET:
        required: true
      WEB_ANALYTICS_POSTGRES_PASSWORD:
        required: true

env:
  AWS_REGION: ${{ vars.DEFAULT_DO_TERRAFORM_STATE_REGION }}
  AWS_ENDPOINT_URL_S3: ${{ vars.DEFAULT_DO_TERRAFORM_STATE_ENDPOINT_URL_S3 }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  CERT_MANAGER_ACME_EMAIL: ${{ vars.CERT_MANAGER_ACME_EMAIL }}
  RUNTIME_DOMAIN: ${{ vars.RUNTIME_DOMAIN }}
  OBSERVE_ROOT_USER_EMAIL: ${{ vars.OBSERVE_ROOT_USER_EMAIL }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EXTERNAL_DNS_TOKEN: ${{ secrets.EXTERNAL_DNS_TOKEN }}
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  OBSERVE_ROOT_USER_PASSWORD: ${{ secrets.OBSERVE_ROOT_USER_PASSWORD }}
  WEB_ANALYTICS_SECRET: ${{ secrets.WEB_ANALYTICS_SECRET }}
  WEB_ANALYTICS_POSTGRES_PASSWORD: ${{ secrets.WEB_ANALYTICS_POSTGRES_PASSWORD }}

jobs:
  deploy-core:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v4
      - run: ./deploy.sh ${{ inputs.environment }}
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ENDPOINT_URL_S3: ${{ env.AWS_ENDPOINT_URL_S3 }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          DIGITALOCEAN_ACCESS_TOKEN: ${{ env.DIGITALOCEAN_ACCESS_TOKEN }}
          CERT_MANAGER_ACME_EMAIL: ${{ env.CERT_MANAGER_ACME_EMAIL }}
          EXTERNAL_DNS_TOKEN: ${{ env.EXTERNAL_DNS_TOKEN }}

  deploy-services:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: deploy-core

    steps:
      - uses: actions/checkout@v4
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DIGITALOCEAN_ACCESS_TOKEN }}
      - run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 runtime-${{ inputs.environment }}
      - run: ./deploy.sh
        working-directory: ./add-ons/services
        env:
          RUNTIME_DOMAIN: ${{ env.RUNTIME_DOMAIN }}
          OBSERVE_ROOT_USER_EMAIL: ${{ env.OBSERVE_ROOT_USER_EMAIL }}
          OBSERVE_ROOT_USER_PASSWORD: ${{ env.OBSERVE_ROOT_USER_PASSWORD }}
          WEB_ANALYTICS_SECRET: ${{ env.WEB_ANALYTICS_SECRET }}
          WEB_ANALYTICS_POSTGRES_PASSWORD: ${{ env.WEB_ANALYTICS_POSTGRES_PASSWORD }}
